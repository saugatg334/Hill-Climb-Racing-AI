(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();class C{constructor(){this.gravity={x:0,y:9.81},this.bodies=[],this.constraints=[]}addBody(e){return this.bodies.push(e),e}removeBody(e){const t=this.bodies.indexOf(e);t>-1&&this.bodies.splice(t,1)}update(e){for(let t of this.bodies)t.isStatic||(t.velocity.y+=this.gravity.y*e,t.position.x+=t.velocity.x*e,t.position.y+=t.velocity.y*e,t.angle+=t.angularVelocity*e,t.velocity.x*=.99,t.velocity.y*=.99,t.angularVelocity*=.95);this.handleCollisions()}handleCollisions(){for(let e of this.bodies)e.position.y>500?(e.position.y=500,e.velocity.y=Math.min(0,e.velocity.y*-.3),e.onGround=!0):e.onGround=!1}createBody(e={}){return{position:e.position||{x:0,y:0},velocity:e.velocity||{x:0,y:0},angle:e.angle||0,angularVelocity:e.angularVelocity||0,mass:e.mass||1,isStatic:e.isStatic||!1,onGround:!1,width:e.width||20,height:e.height||20,type:e.type||"rectangle"}}}class u{constructor(e,t,i){this.layers=[],this.weights=[],this.biases=[];const s=[e,...t,i];for(let n=0;n<s.length;n++)this.layers.push(new Array(s[n]).fill(0));for(let n=0;n<s.length-1;n++){const o=[],a=[];for(let l=0;l<s[n+1];l++){const c=[];for(let h=0;h<s[n];h++)c.push(this.randomWeight());o.push(c),a.push(this.randomWeight())}this.weights.push(o),this.biases.push(a)}}randomWeight(){return(Math.random()-.5)*2}feedForward(e){for(let t=0;t<e.length;t++)this.layers[0][t]=e[t];for(let t=1;t<this.layers.length;t++)for(let i=0;i<this.layers[t].length;i++){let s=this.biases[t-1][i];for(let n=0;n<this.layers[t-1].length;n++)s+=this.layers[t-1][n]*this.weights[t-1][i][n];this.layers[t][i]=this.activate(s)}return[...this.layers[this.layers.length-1]]}activate(e){return 1/(1+Math.exp(-e))}mutate(e=.1,t=.5){for(let i=0;i<this.weights.length;i++)for(let s=0;s<this.weights[i].length;s++)for(let n=0;n<this.weights[i][s].length;n++)Math.random()<e&&(this.weights[i][s][n]+=(Math.random()-.5)*t,this.weights[i][s][n]=Math.max(-2,Math.min(2,this.weights[i][s][n])));for(let i=0;i<this.biases.length;i++)for(let s=0;s<this.biases[i].length;s++)Math.random()<e&&(this.biases[i][s]+=(Math.random()-.5)*t,this.biases[i][s]=Math.max(-2,Math.min(2,this.biases[i][s])))}crossover(e){const t=new u(this.layers[0].length,this.layers.slice(1,-1).map(i=>i.length),this.layers[this.layers.length-1].length);for(let i=0;i<this.weights.length;i++)for(let s=0;s<this.weights[i].length;s++)for(let n=0;n<this.weights[i][s].length;n++)t.weights[i][s][n]=Math.random()<.5?this.weights[i][s][n]:e.weights[i][s][n];for(let i=0;i<this.biases.length;i++)for(let s=0;s<this.biases[i].length;s++)t.biases[i][s]=Math.random()<.5?this.biases[i][s]:e.biases[i][s];return t}copy(){const e=new u(this.layers[0].length,this.layers.slice(1,-1).map(t=>t.length),this.layers[this.layers.length-1].length);for(let t=0;t<this.weights.length;t++)for(let i=0;i<this.weights[t].length;i++)for(let s=0;s<this.weights[t][i].length;s++)e.weights[t][i][s]=this.weights[t][i][s];for(let t=0;t<this.biases.length;t++)for(let i=0;i<this.biases[t].length;i++)e.biases[t][i]=this.biases[t][i];return e}}class d{constructor(e,t){this.position={x:e,y:t},this.velocity={x:0,y:0},this.angle=0,this.angularVelocity=0,this.width=40,this.height=20,this.wheelRadius=12,this.isDead=!1,this.isFlipped=!1,this.onGround=!1,this.score=0,this.fitness=0,this.timeAlive=0,this.brain=null,this.maxSpeed=15,this.acceleration=8,this.brakeForce=12,this.torque=.3,this.fuel=100,this.maxFuel=100,this.wheels=[{x:-15,y:10,onGround:!1,rotation:0},{x:15,y:10,onGround:!1,rotation:0}],this.startTime=Date.now()}update(e){if(this.isDead)return;this.timeAlive+=e,this.score=Math.max(this.score,this.position.x/10);const t=(this.angle%(Math.PI*2)+Math.PI*2)%(Math.PI*2);if(this.isFlipped=t>Math.PI*.7&&t<Math.PI*1.3,this.position.y>800||this.timeAlive>30||this.fuel<=0){this.isDead=!0;return}if(this.isFlipped){if(this.flipTime=(this.flipTime||0)+e,this.flipTime>3){this.isDead=!0;return}}else this.flipTime=0;for(let i of this.wheels)i.rotation+=this.velocity.x*e*.1;Math.abs(this.velocity.x)>1&&(this.fuel-=e*2)}applyControls(e){if(this.isDead)return;const[t,i,s]=e;t>.5&&(this.velocity.x+=this.acceleration*.016,this.fuel-=.1),i>.5&&(this.velocity.x*=.9),s>.6?this.angularVelocity+=this.torque*.016:s<.4&&(this.angularVelocity-=this.torque*.016),this.velocity.x=Math.max(-this.maxSpeed,Math.min(this.maxSpeed,this.velocity.x))}applyHumanControls(e){this.isDead||(e.accelerate&&(this.velocity.x+=this.acceleration*.016,this.fuel-=.1),e.brake&&(this.velocity.x*=.9),e.lean!==0&&(this.angularVelocity+=e.lean*this.torque*.016),this.velocity.x=Math.max(-this.maxSpeed,Math.min(this.maxSpeed,this.velocity.x)))}draw(e){e.save(),e.translate(this.position.x,this.position.y),e.rotate(this.angle),e.fillStyle=this.isDead?"#666":"#ff4444",e.fillRect(-this.width/2,-this.height/2,this.width,this.height),e.fillStyle="#333";for(let t of this.wheels)e.save(),e.translate(t.x,t.y),e.rotate(t.rotation),e.beginPath(),e.arc(0,0,this.wheelRadius,0,Math.PI*2),e.fill(),e.strokeStyle="#666",e.lineWidth=2,e.beginPath(),e.moveTo(-this.wheelRadius*.7,0),e.lineTo(this.wheelRadius*.7,0),e.moveTo(0,-this.wheelRadius*.7),e.lineTo(0,this.wheelRadius*.7),e.stroke(),e.restore();this.isDead||(e.fillStyle="rgba(0, 0, 0, 0.5)",e.fillRect(-20,-35,40,6),e.fillStyle=this.fuel>30?"#4CAF50":"#f44336",e.fillRect(-20,-35,this.fuel/this.maxFuel*40,6)),e.restore(),this.isDead||(e.fillStyle="white",e.font="12px Arial",e.textAlign="center",e.fillText(Math.floor(this.score),this.position.x,this.position.y-50))}getWheelPositions(){const e=Math.cos(this.angle),t=Math.sin(this.angle);return this.wheels.map(i=>({x:this.position.x+i.x*e-i.y*t,y:this.position.y+i.x*t+i.y*e}))}}class M{constructor(e){this.size=e,this.vehicles=[],this.generation=1,this.bestFitness=0,this.species=[],this.initializePopulation()}initializePopulation(){this.vehicles=[];for(let e=0;e<this.size;e++){const t=new d(100,300);t.brain=new u(12,[16,12],3),this.vehicles.push(t)}}evolve(){this.calculateFitness(),this.vehicles.sort((i,s)=>s.fitness-i.fitness),this.vehicles[0].fitness>this.bestFitness&&(this.bestFitness=this.vehicles[0].fitness);const e=[],t=Math.floor(this.size*.1);for(let i=0;i<t;i++){const s=new d(100,300);s.brain=this.vehicles[i].brain.copy(),e.push(s)}for(;e.length<this.size;){const i=this.selectParent(),s=this.selectParent(),n=new d(100,300);n.brain=i.brain.crossover(s.brain),n.brain.mutate(.1,.3),e.push(n)}this.vehicles=e,this.generation++,console.log(`Generation ${this.generation}, Best Fitness: ${this.bestFitness.toFixed(2)}`)}calculateFitness(){for(let e of this.vehicles)e.fitness=e.score,e.fitness+=e.timeAlive*.1,e.isFlipped&&(e.fitness*=.5),e.fitness=Math.max(e.fitness,.1)}selectParent(){let t=null;for(let i=0;i<5;i++){const s=this.vehicles[Math.floor(Math.random()*this.vehicles.length)];(!t||s.fitness>t.fitness)&&(t=s)}return t}getBestVehicle(){let e=this.vehicles[0];for(let t of this.vehicles)t.fitness>e.fitness&&(e=t);return e}getAliveCount(){return this.vehicles.filter(e=>!e.isDead).length}}class w{constructor(){this.points=[],this.width=5e3,this.segments=200,this.maxHeight=200,this.minHeight=400,this.generateTerrain()}generateTerrain(){this.points=[],this.points.push({x:0,y:500});let e=500;const t=this.width/this.segments;for(let i=1;i<=this.segments;i++){const s=i*t,n=(Math.random()-.5)*50;e+=n,e=Math.max(this.maxHeight,Math.min(this.minHeight,e)),i%20===0&&(e+=(Math.random()-.5)*100),this.points.push({x:s,y:e})}this.smoothTerrain()}smoothTerrain(){for(let e=1;e<this.points.length-1;e++){const t=this.points[e-1],i=this.points[e],s=this.points[e+1];i.y=(t.y+i.y+s.y)/3}}getGroundHeight(e){for(let t=0;t<this.points.length-1;t++){const i=this.points[t],s=this.points[t+1];if(e>=i.x&&e<=s.x){const n=(e-i.x)/(s.x-i.x);return i.y+(s.y-i.y)*n}}return this.points[this.points.length-1].y}getGroundDistance(e,t){const i=this.getGroundHeight(e);return Math.max(0,i-t)}draw(e){const t=e.createLinearGradient(0,0,0,600);t.addColorStop(0,"#87CEEB"),t.addColorStop(1,"#98FB98"),e.fillStyle=t,e.fillRect(-1e3,-1e3,8e3,2e3),e.fillStyle="#8B4513",e.strokeStyle="#654321",e.lineWidth=2,e.beginPath(),e.moveTo(this.points[0].x,this.points[0].y);for(let i=1;i<this.points.length;i++)e.lineTo(this.points[i].x,this.points[i].y);e.lineTo(this.width,1e3),e.lineTo(0,1e3),e.closePath(),e.fill(),e.stroke(),e.strokeStyle="#228B22",e.lineWidth=3,e.beginPath(),e.moveTo(this.points[0].x,this.points[0].y);for(let i=1;i<this.points.length;i++)e.lineTo(this.points[i].x,this.points[i].y);e.stroke(),this.drawDecorations(e)}drawDecorations(e){for(let t=0;t<this.points.length;t+=10)if(Math.random()<.3){const i=this.points[t];Math.random()<.7?this.drawTree(e,i.x,i.y):this.drawRock(e,i.x,i.y)}}drawTree(e,t,i){e.fillStyle="#8B4513",e.fillRect(t-3,i-30,6,30),e.fillStyle="#228B22",e.beginPath(),e.arc(t,i-35,15,0,Math.PI*2),e.fill()}drawRock(e,t,i){e.fillStyle="#696969",e.beginPath(),e.ellipse(t,i-5,8,5,0,0,Math.PI*2),e.fill()}}class v{constructor(){this.canvas=document.getElementById("game-canvas"),this.ctx=this.canvas.getContext("2d"),this.nnCanvas=document.getElementById("nn-canvas"),this.nnCtx=this.nnCanvas.getContext("2d"),this.physics=new C,this.population=null,this.terrain=null,this.gameState="menu",this.generation=1,this.bestScore=0,this.currentScore=0,this.aliveCount=0,this.camera={x:0,y:0},this.gameSpeed=1,this.showBest=!1,this.isPaused=!1,this.setupCanvas(),this.setupControls(),this.lastTime=0,this.gameLoop=this.gameLoop.bind(this)}setupCanvas(){const e=()=>{const t=this.canvas.parentElement;this.canvas.width=t.clientWidth,this.canvas.height=t.clientHeight-100};e(),window.addEventListener("resize",e)}setupControls(){this.keys={},document.addEventListener("keydown",e=>{switch(this.keys[e.code]=!0,e.code){case"Space":e.preventDefault(),this.togglePause();break;case"KeyB":this.showBest=!this.showBest;break;case"KeyR":this.gameState==="training"&&this.restartTraining();break}}),document.addEventListener("keyup",e=>{this.keys[e.code]=!1})}startAITraining(){this.gameState="training",this.generation=1,this.bestScore=0;const e=parseInt(document.getElementById("population-size").value);this.population=new M(e),this.terrain=new w,this.terrain.generateTerrain(),this.gameLoop(),this.updateUI()}startHumanPlay(){this.gameState="playing",this.currentScore=0,this.humanVehicle=new d(100,300),this.terrain=new w,this.terrain.generateTerrain(),this.gameLoop(),this.updateUI()}gameLoop(e=0){if(this.isPaused){requestAnimationFrame(this.gameLoop);return}const t=(e-this.lastTime)/1e3;this.lastTime=e,this.physics.update(t*this.gameSpeed),this.gameState==="training"?this.updateAITraining(t):this.gameState==="playing"&&this.updateHumanPlay(t),this.render(),this.updateUI(),requestAnimationFrame(this.gameLoop)}updateAITraining(e){if(!this.population)return;let t=0,i=null,s=0;for(let n of this.population.vehicles)if(!n.isDead){const o=this.getSensorInputs(n),a=n.brain.feedForward(o);n.applyControls(a),n.update(e),t++,n.score>s&&(s=n.score,i=n)}this.aliveCount=t,this.currentScore=s,s>this.bestScore&&(this.bestScore=s),i&&(this.camera.x=i.position.x-this.canvas.width/2,this.camera.y=i.position.y-this.canvas.height/2),t===0&&this.nextGeneration(),i&&document.getElementById("show-neural-network").checked&&this.drawNeuralNetwork(i.brain)}updateHumanPlay(e){if(!this.humanVehicle||this.humanVehicle.isDead)return;const t={accelerate:this.keys.ArrowRight||this.keys.KeyD,brake:this.keys.ArrowLeft||this.keys.KeyA,lean:0};(this.keys.ArrowUp||this.keys.KeyW)&&(t.lean=-1),(this.keys.ArrowDown||this.keys.KeyS)&&(t.lean=1),this.humanVehicle.applyHumanControls(t),this.humanVehicle.update(e),this.currentScore=this.humanVehicle.score,this.camera.x=this.humanVehicle.position.x-this.canvas.width/2,this.camera.y=this.humanVehicle.position.y-this.canvas.height/2}getSensorInputs(e){const t=[];t.push(Math.sin(e.angle)),t.push(Math.cos(e.angle)),t.push(e.velocity.x/20),t.push(e.velocity.y/20),t.push(e.angularVelocity/5);for(let i=0;i<5;i++){const s=e.angle+(i-2)*.3,n=this.terrain.getGroundDistance(e.position.x+Math.cos(s)*50*(i+1),e.position.y);t.push(Math.min(n/100,1))}return t}nextGeneration(){this.generation++,this.population.evolve(),this.terrain.generateTerrain(),console.log(`Generation ${this.generation} - Best Score: ${this.bestScore}`)}render(){if(this.ctx.fillStyle="#87CEEB",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.save(),this.ctx.translate(-this.camera.x,-this.camera.y),this.terrain&&this.terrain.draw(this.ctx),this.gameState==="training"&&this.population)for(let e of this.population.vehicles)e.isDead||e.draw(this.ctx);else this.gameState==="playing"&&this.humanVehicle&&this.humanVehicle.draw(this.ctx);this.ctx.restore(),this.drawUI()}drawUI(){this.gameState==="playing"&&(this.ctx.fillStyle="rgba(0, 0, 0, 0.7)",this.ctx.fillRect(10,this.canvas.height-80,300,70),this.ctx.fillStyle="white",this.ctx.font="14px Arial",this.ctx.fillText("Controls:",20,this.canvas.height-60),this.ctx.fillText("Arrow Keys or WASD to control",20,this.canvas.height-40),this.ctx.fillText("Space to pause",20,this.canvas.height-20))}drawNeuralNetwork(e){if(!e||!this.nnCtx)return;const t=this.nnCtx,i=this.nnCanvas.width,s=this.nnCanvas.height;t.fillStyle="rgba(0, 0, 0, 0.8)",t.fillRect(0,0,i,s);const n=e.layers,o=i/n.length;t.strokeStyle="rgba(255, 255, 255, 0.3)",t.fillStyle="white";for(let a=0;a<n.length;a++){const l=n[a],c=s/l.length;for(let h=0;h<l.length;h++){const m=a*o+o/2,p=h*c+c/2;if(t.beginPath(),t.arc(m,p,8,0,Math.PI*2),t.fill(),a<n.length-1){const y=n[a+1],f=s/y.length;for(let g=0;g<y.length;g++){const L=(a+1)*o+o/2,b=g*f+f/2;t.beginPath(),t.moveTo(m,p),t.lineTo(L,b),t.stroke()}}}}}updateUI(){document.getElementById("current-score").textContent=Math.floor(this.currentScore),document.getElementById("current-gen").textContent=this.generation,document.getElementById("alive-count").textContent=this.aliveCount,document.getElementById("best-score").textContent=Math.floor(this.bestScore),document.getElementById("generation").textContent=this.generation,document.getElementById("species-count").textContent=this.population?this.population.species.length:0}togglePause(){this.isPaused=!this.isPaused;const e=document.getElementById("pause-btn");e&&(e.textContent=this.isPaused?"▶️ Resume":"⏸️ Pause")}pause(){this.isPaused=!0}restartTraining(){this.startAITraining()}}class E{constructor(){this.currentScreen="loading",this.setupEventListeners()}setupEventListeners(){}showScreen(e){document.querySelectorAll(".screen").forEach(i=>{i.classList.add("hidden")});const t=document.getElementById(e);t&&(t.classList.remove("hidden"),this.currentScreen=e)}updateGameStats(e){const t={"current-score":e.score,"current-gen":e.generation,"alive-count":e.aliveCount,"best-score":e.bestScore,generation:e.generation,"species-count":e.speciesCount};for(const[i,s]of Object.entries(t)){const n=document.getElementById(i);n&&s!==void 0&&(n.textContent=s)}}showNotification(e,t="info"){const i=document.createElement("div");i.className=`notification ${t}`,i.textContent=e,i.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 1rem 2rem;
            background: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 8px;
            z-index: 1000;
            animation: slideIn 0.3s ease;
        `,document.body.appendChild(i),setTimeout(()=>{i.remove()},3e3)}}const S=[{name:"Rickshaw",type:"Local",status:"Unlocked"},{name:"Brawan Jeep",type:"Offroad",status:"Unlocked"},{name:"Hot Rod",type:"Classic Race",status:"Locked"},{name:"Tractor",type:"Farming",status:"Locked"},{name:"Police Van",type:"Official",status:"Locked"},{name:"Ambulance",type:"Emergency",status:"Locked"},{name:"School Bus",type:"Public Transport",status:"Locked"},{name:"Moonlander",type:"Sci-Fi",status:"Bonus Locked"},{name:"Helicopter",type:"Air Vehicle",status:"Locked"},{name:"Cycle",type:"Simple",status:"Unlocked"},{name:"Bike",type:"Motor",status:"Locked"},{name:"Fire Truck",type:"Emergency",status:"Locked"},{name:"Electric Car",type:"Modern",status:"Locked"},{name:"Tuk Tuk",type:"Local Taxi",status:"Locked"},{name:"Bullock Cart",type:"Traditional",status:"Locked"},{name:"Army Truck",type:"Military",status:"Locked"},{name:"Drone Rider",type:"Futuristic",status:"Locked"},{name:"Solar Car",type:"Sci-Fi",status:"Locked"},{name:"Gravity Bike",type:"Low Gravity",status:"Locked"},{name:"Magnet Truck",type:"High Tech",status:"Locked"},{name:"Luxury SUV",type:"Premium",status:"Locked"},{name:"Transformer Ride",type:"Morphing",status:"Locked"},{name:"AI Car",type:"Robot Driven",status:"Locked"},{name:"Cargo Truck",type:"Heavy Vehicle",status:"Locked"},{name:"Van",type:"Delivery",status:"Locked"},{name:"Vintage Car",type:"Classic",status:"Locked"},{name:"Snowmobile",type:"Ice Terrain",status:"Locked"},{name:"Jet Car",type:"Super Speed",status:"Locked"},{name:"Electric Scooter",type:"Light Ride",status:"Locked"},{name:"Horse Cart",type:"Traditional Rural",status:"Locked"},{name:"UFO Car (hidden)",type:"Alien Ride",status:"Hidden Bonus"}],k=[{name:"Mahendra Highway",terrain:"Road",status:"Unlocked"},{name:"Kathmandu City",terrain:"Urban",status:"Locked"},{name:"Lumbini",terrain:"Cultural",status:"Locked"},{name:"Pokhara",terrain:"Lake Hill",status:"Locked"},{name:"Rara Lake",terrain:"Snow + Lake",status:"Locked"},{name:"Nijgadh Fast Track",terrain:"Speedway",status:"Locked"},{name:"Mustang Trail",terrain:"Rocky",status:"Locked"},{name:"Everest Base Camp",terrain:"Snowy Mountain",status:"Locked"},{name:"Terai Flatland",terrain:"Smooth Drive",status:"Locked"},{name:"Chitwan National Park",terrain:"Jungle Safari",status:"Locked"},{name:"Moon",terrain:"Low Gravity",status:"Bonus Locked"},{name:"Mars Surface",terrain:"Alien Planet",status:"Locked"},{name:"Cyber Arena",terrain:"Futuristic",status:"Locked"},{name:"Space Highway",terrain:"Sci-Fi",status:"Locked"},{name:"Glass Skyroad",terrain:"Transparent Path",status:"Locked"},{name:"Gaindakot Bridge",terrain:"Narrow Bridges",status:"Locked"},{name:"Boudhanath Circuit",terrain:"Cultural",status:"Locked"},{name:"Pashupatinath Round",terrain:"Religious Temple",status:"Locked"},{name:"Jungle Trail",terrain:"Forest Track",status:"Locked"},{name:"Flood Survival",terrain:"Disaster Stage",status:"Locked"},{name:"Earthquake Ruins",terrain:"Broken Terrain",status:"Locked"},{name:"Snowstorm Drive",terrain:"Icy Road",status:"Locked"},{name:"AI Robot War Zone",terrain:"Battle Area",status:"Locked"},{name:"Neon City",terrain:"Lit-Up Roads",status:"Locked"},{name:"Junkyard Rush",terrain:"Scrap Terrain",status:"Locked"},{name:"Alien Planet",terrain:"Floating Gravity",status:"Locked"},{name:"Desert Sandstorm",terrain:"Windy, Dry",status:"Locked"},{name:"Thamel Night Drive",terrain:"Crowded Market",status:"Locked"},{name:"Bhaktapur Durbar Square",terrain:"Ancient",status:"Locked"},{name:"Fewa Tal",terrain:"Lakeside Beauty",status:"Locked"},{name:"Hidden Tunnel (secret stage)",terrain:"Secret Bonus",status:"Hidden Bonus"}];class x{constructor(){this.gameManager=null,this.uiManager=new E,this.currentScreen="loading",this.init()}async init(){await this.initCrazyGamesSDK(),await this.loadGame(),this.setupEventListeners(),this.showScreen("main-menu")}async initCrazyGamesSDK(){let e=0;const t=50;for(;e<t;){if(window.CrazyGames&&window.CrazyGames.SDK&&window.CrazyGames.SDK.game)try{typeof window.CrazyGames.SDK.game.loadingStart=="function"&&(window.CrazyGames.SDK.game.loadingStart(),console.log("CrazyGames SDK initialized successfully"));return}catch(i){console.warn("Error calling CrazyGames SDK loadingStart:",i);return}e++,await new Promise(i=>setTimeout(i,100))}console.warn("CrazyGames SDK not available after waiting")}async loadGame(){const e=document.getElementById("loading-progress"),t=document.getElementById("loading-text"),i=[{text:"Loading game assets...",progress:20},{text:"Initializing physics engine...",progress:40},{text:"Setting up neural networks...",progress:60},{text:"Preparing vehicles and stages...",progress:80},{text:"Ready to play!",progress:100}];for(let s=0;s<i.length;s++){const n=i[s];t.textContent=n.text,e.style.width=n.progress+"%",await new Promise(o=>setTimeout(o,500))}if(window.CrazyGames&&window.CrazyGames.SDK&&window.CrazyGames.SDK.game)try{typeof window.CrazyGames.SDK.game.loadingFinished=="function"&&window.CrazyGames.SDK.game.loadingFinished()}catch(s){console.warn("Error calling CrazyGames SDK loadingFinished:",s)}}setupEventListeners(){var e,t;document.getElementById("start-ai-btn").addEventListener("click",()=>{this.startAITraining()}),document.getElementById("play-human-btn").addEventListener("click",()=>{this.startHumanPlay()}),document.getElementById("vehicles-btn").addEventListener("click",()=>{this.showVehicles()}),document.getElementById("stages-btn").addEventListener("click",()=>{this.showStages()}),document.getElementById("settings-btn").addEventListener("click",()=>{this.showScreen("settings-screen")}),document.getElementById("vehicles-back").addEventListener("click",()=>{this.showScreen("main-menu")}),document.getElementById("stages-back").addEventListener("click",()=>{this.showScreen("main-menu")}),document.getElementById("settings-back").addEventListener("click",()=>{this.showScreen("main-menu")}),(e=document.getElementById("menu-btn"))==null||e.addEventListener("click",()=>{this.showScreen("main-menu"),this.gameManager&&this.gameManager.pause()}),(t=document.getElementById("pause-btn"))==null||t.addEventListener("click",()=>{this.gameManager&&this.gameManager.togglePause()}),this.setupSettingsListeners()}setupSettingsListeners(){const e=document.getElementById("population-size"),t=document.getElementById("population-value");e.addEventListener("input",a=>{t.textContent=a.target.value});const i=document.getElementById("mutation-rate"),s=document.getElementById("mutation-value");i.addEventListener("input",a=>{s.textContent=a.target.value});const n=document.getElementById("game-speed"),o=document.getElementById("speed-value");n.addEventListener("input",a=>{o.textContent=a.target.value+"x"})}showScreen(e){document.querySelectorAll(".screen").forEach(t=>{t.classList.add("hidden")}),document.getElementById(e).classList.remove("hidden"),this.currentScreen=e}showVehicles(){this.showScreen("vehicles-screen"),this.populateVehicles()}showStages(){this.showScreen("stages-screen"),this.populateStages()}populateVehicles(){const e=document.getElementById("vehicles-grid");e.innerHTML="",S.forEach((t,i)=>{const s=document.createElement("div");s.className=`vehicle-card ${t.status.toLowerCase().replace(" ","-")}`;const n=t.status==="Unlocked"?"status-unlocked":t.status==="Hidden Bonus"?"status-hidden":"status-locked";s.innerHTML=`
                <div class="card-header">
                    <div class="card-title">${t.name}</div>
                    <div class="card-status ${n}">${t.status}</div>
                </div>
                <div class="card-type">${t.type}</div>
                <div class="card-description">
                    ${this.getVehicleDescription(t.name)}
                </div>
            `,t.status==="Unlocked"&&s.addEventListener("click",()=>{this.selectVehicle(i)}),e.appendChild(s)})}populateStages(){const e=document.getElementById("stages-grid");e.innerHTML="",k.forEach((t,i)=>{const s=document.createElement("div");s.className=`stage-card ${t.status.toLowerCase().replace(" ","-")}`;const n=t.status==="Unlocked"?"status-unlocked":t.status==="Hidden Bonus"?"status-hidden":"status-locked";s.innerHTML=`
                <div class="card-header">
                    <div class="card-title">${t.name}</div>
                    <div class="card-status ${n}">${t.status}</div>
                </div>
                <div class="card-type">${t.terrain}</div>
                <div class="card-description">
                    ${this.getStageDescription(t.name)}
                </div>
            `,t.status==="Unlocked"&&s.addEventListener("click",()=>{this.selectStage(i)}),e.appendChild(s)})}getVehicleDescription(e){return{Rickshaw:"Traditional three-wheeler perfect for city navigation","Brawan Jeep":"Rugged off-road vehicle built for tough terrain","Hot Rod":"Classic racing machine with incredible speed",Cycle:"Simple and eco-friendly transportation",Moonlander:"Special vehicle designed for low-gravity environments"}[e]||"A unique vehicle with special characteristics"}getStageDescription(e){return{"Mahendra Highway":"The main highway connecting east and west Nepal","Kathmandu City":"Navigate through the bustling capital city",Lumbini:"Peaceful cultural site, birthplace of Buddha",Pokhara:"Beautiful lakeside city with mountain views",Moon:"Low gravity environment with unique challenges"}[e]||"A challenging terrain with unique obstacles"}selectVehicle(e){console.log("Selected vehicle:",S[e]),localStorage.setItem("selectedVehicle",e.toString()),this.showScreen("main-menu")}selectStage(e){console.log("Selected stage:",k[e]),localStorage.setItem("selectedStage",e.toString()),this.showScreen("main-menu")}startAITraining(){this.showScreen("game-screen"),this.gameManager||(this.gameManager=new v),this.gameManager.startAITraining()}startHumanPlay(){this.showScreen("game-screen"),this.gameManager||(this.gameManager=new v),this.gameManager.startHumanPlay()}}document.addEventListener("DOMContentLoaded",()=>{new x});
